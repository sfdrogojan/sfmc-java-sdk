/*
 * Marketing Cloud REST API
 * Marketing Cloud's REST API is our newest API. It supports multi-channel use cases, is much more lightweight and easy to use than our SOAP API, and is getting more comprehensive with every release.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mc_sdk@salesforce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.salesforce.marketingcloud.javasdk.api;

import com.github.salesforce.marketingcloud.javasdk.ApiException;
import com.github.salesforce.marketingcloud.javasdk.model.Asset;
import com.github.salesforce.marketingcloud.javasdk.model.AssetType;
import org.junit.Assert;
import org.junit.Test;

import java.lang.reflect.InvocationTargetException;
import java.math.BigDecimal;

import static org.junit.Assert.assertEquals;

/**
 * API tests for AssetApi
 */
public class AssetApiTest extends ApiTest {

    private final AssetApi api;

    public AssetApiTest() throws ClassNotFoundException, NoSuchMethodException, InvocationTargetException, InstantiationException, IllegalAccessException {
        this.api = new ApiSutFactory<>(AssetApi.class).create();
    }

    /**
     * createAsset
     *
     * Creates a new asset.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAssetTest() throws ApiException {
        Asset asset = createAsset();
        Asset createdAsset = this.api.createAsset(asset);

        try
        {
            assertEquals(asset.getCustomerKey(), createdAsset.getCustomerKey());
            assertEquals(asset.getName(), createdAsset.getName());
            assertEquals(asset.getDescription(), createdAsset.getDescription());
            assertEquals(asset.getAssetType().getId(), createdAsset.getAssetType().getId());
            assertEquals(asset.getAssetType().getName(), createdAsset.getAssetType().getName());
            assertEquals(asset.getAssetType().getDisplayName(), createdAsset.getAssetType().getDisplayName());
        }
        finally {
            this.api.deleteAssetById(createdAsset.getId());
        }

        // TODO: test validations
    }

    /**
     * deleteAsset
     *
     * Deletes an asset.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAssetByIdTest() throws ApiException {
        Asset asset = createAsset();
        Asset createdAsset = this.api.createAsset(asset);
        this.api.deleteAssetById(createdAsset.getId());

        try
        {
            this.api.getAssetById(createdAsset.getId());
            Assert.fail("No exception thrown");
        }
        catch (ApiException e){
            assertEquals(404, e.getCode());
        }

        // TODO: test validations
    }
    
    /**
     * getAssetById
     *
     * Gets an asset by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAssetByIdTest() throws ApiException {
        Asset asset = createAsset();
        Asset createdAsset = this.api.createAsset(asset);
        Asset getAssetByIdResult = this.api.getAssetById(createdAsset.getId());

        try
        {
            assertEquals(asset.getCustomerKey(), getAssetByIdResult.getCustomerKey());
            assertEquals(asset.getName(), getAssetByIdResult.getName());
            assertEquals(asset.getDescription(), getAssetByIdResult.getDescription());
            assertEquals(asset.getAssetType().getId(), getAssetByIdResult.getAssetType().getId());
            assertEquals(asset.getAssetType().getName(), getAssetByIdResult.getAssetType().getName());
            assertEquals(asset.getAssetType().getDisplayName(), getAssetByIdResult.getAssetType().getDisplayName());
        }
        finally {
            this.api.deleteAssetById(createdAsset.getId());
        }
        // TODO: test validations
    }
    
    /**
     * patchAsset
     *
     * Updates part of an asset.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void partiallyUpdateAssetTest() throws ApiException {
        Asset asset = createAsset();
        Asset createdAsset = this.api.createAsset(asset);
        createdAsset.setDescription(java.util.UUID.randomUUID().toString());
        Asset partiallyUpdateAssetResult = api.partiallyUpdateAssetById(createdAsset.getId(), createdAsset);

        try
        {
            assertEquals(createdAsset.getDescription(), partiallyUpdateAssetResult.getDescription());
            assertEquals(asset.getCustomerKey(), partiallyUpdateAssetResult.getCustomerKey());
            assertEquals(asset.getName(), partiallyUpdateAssetResult.getName());
            assertEquals(asset.getAssetType().getId(), partiallyUpdateAssetResult.getAssetType().getId());
            assertEquals(asset.getAssetType().getName(), partiallyUpdateAssetResult.getAssetType().getName());
            assertEquals(asset.getAssetType().getDisplayName(), partiallyUpdateAssetResult.getAssetType().getDisplayName());
        }
        finally {
            this.api.deleteAssetById(createdAsset.getId());
        }

        // TODO: test validations
    }

    @Test
    public void deleteNonExistingAssetDoesNotThrowException() throws ApiException {
        Asset asset = createAsset();
        Asset createdAsset = this.api.createAsset(asset);
        this.api.deleteAssetById(createdAsset.getId());

        try {
            this.api.deleteAssetById(createdAsset.getId());
        }
        catch (ApiException e){
            Assert.fail("Should not throw exception");
        }
    }

    private Asset createAsset() {
        AssetType assetType = new AssetType();
        assetType.setId(BigDecimal.valueOf(196));
        assetType.setName("textblock");
        assetType.setDisplayName("Text Block");

        Asset asset = new Asset();
        asset.setCustomerKey(java.util.UUID.randomUUID().toString());
        asset.setName("Asset " + java.util.UUID.randomUUID().toString());
        asset.setDescription("Asset from Automated Java SDK");
        asset.setAssetType(assetType);
        return asset;
    }
}
